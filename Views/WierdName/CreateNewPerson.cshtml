@*Use our Person class to display various part of it. 'model' will be use as a variable to call different property of our class*@
@model Codeboxx_Stack_Demo.Models.Person

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@*    this is the same as using a <form></form>   *@
@using (Html.BeginForm())
{



    //this it for our '[ValidateAntiForgeryToken]' on top of our method. name is self explanatory
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Person</h4>
        <hr />

        @*displays a summary of all validation errors on a web page*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">


            @*This is the same as this => `<label for="Name" class="control-label col-md-2"></label>`*@
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @*Cs can easily attribute it that way and it make the code cleaner*@


            <div class="col-md-10">
                @*This is the same as this => `<input class="form-control" name="Name" />`*@
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @*Cs can easily attribute it that way and it make the code cleaner*@


                @*This will display error message to the user. In this case, if the user puts less than 3 characters or left the field empty*@
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })



            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>